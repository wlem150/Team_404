<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
       http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd">
	<bean id="CustomLogoutSuccessHandler"
		class="com.tasteforming.security.CustomLogoutSuccessHandler">

	</bean>

	<bean id="customAccessDenied"
		class="com.tasteforming.security.CustomAccessDeniedHandler">
	</bean>
	<bean id="customLoginSuccess"
		class="com.tasteforming.security.CustomLoginSuccessHandler">
	</bean>
	<!-- <bean id="customPasswordEncoder" class="com.tasteforming.security.CustomNoOpPasswordEncoder"> 
		</bean> -->

	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailsService"
		class="com.tasteforming.security.CustomUserDetailsService"></bean>


	<security:http>

		<!-- <security:intercept-url pattern="/sample/all" access="permitAll" /> 
			<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" 
			/> <security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" 
			/> -->
<!-- 		<security:session-management>
			<security:concurrency-control
				max-sessions="2" error-if-maximum-exceeded="true" />
		</security:session-management> -->
		<security:csrf disabled="true" />
		<security:access-denied-handler
			ref="customAccessDenied" />

		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess" />

		<security:remember-me
			data-source-ref="dataSource" token-validity-seconds="604800" />

		<security:logout
			logout-success-url="/tasteforming/main" logout-url="/customLogout"
			invalidate-session="true" delete-cookies="remember-me,JSESSION_ID" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder
				ref="bcryptPasswordEncoder" />
		</security:authentication-provider>

	</security:authentication-manager>

	<!-- 657p jdbc-user-service에 PreparedStatement구문 등록 -->
	<!-- <security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select 
		userid, userpw, enabled from tbl_member where userid = ?" authorities-by-username-query="select 
		userid, auth from tbl_member_auth where userid = ?"/> -->




</beans>