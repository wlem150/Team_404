<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tasteforming.mapper.MemberMapper">

	<resultMap type="com.tasteforming.domain.MemberVO"
		id="memberMap">
		<id property="userId" column="userid" />
		<result property="userId" column="userid" />
		<result property="userPw" column="userpw" />
		<result property="userName" column="username" />
		<result property="regDate" column="regdate" />
		<result property="updateDate" column="updatedate" />
		<result property="address" column="address" />
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>

	<resultMap type="com.tasteforming.domain.AuthVO" id="authMap">
		<result property="userId" column="userid" />
		<result property="auth" column="auth" />
	</resultMap>

	<!-- <select id="checkDuplicateUsername" resultMap="memberMap" > SELECT 
		COUNT(*) FROM users WHERE userid = #{userId}; </select> -->

	<select id="read" resultMap="memberMap">
		SELECT
		mem.userid, userpw, username,
		enabled, regdate, updatedate, auth, address
		FROM
		member mem LEFT OUTER
		JOIN auth au on mem.userid = au.userid
		WHERE mem.userid = #{userId}
	</select>

	<select id="getAddress" resultType="com.tasteforming.domain.MemberVO">
		select address from member where userid = #{userId}
	</select>

	<select id="getAllMember"
		resultType="com.tasteforming.domain.MemberVO">
   <![CDATA[SELECT 
    u.USERID, 
    u.USERPW, 
    u.USERNAME, 
    u.REGDATE AS USERREGDATE, 
    u.UPDATEDATE, 
    u.ENABLED, 
    u.ADDRESS, 
    a.AUTH
FROM 
    MEMBER u 
    JOIN AUTH a ON u.USERID = a.USERID ]]>
	</select>
	<insert id="createMember">
		insert into member (
		USERID, USERPW, USERNAME,
		REGDATE, UPDATEDATE, ENABLED, address
		)
		values (
		#{userId}, #{userPw},
		#{userName}, SYSDATE, SYSDATE, '1', #{address}
		)
	</insert>
	<insert id="createMemberAuth">
		insert into auth (
		USERID, AUTH
		)
		values (
		#{userId},
		#{auth}
		)
	</insert>
	<select id="idCheck" resultType="int">

		select count(*) from member where userid = #{userId}

	</select>
	
	<select id="enabledCheck" resultType="int">

		select count(*) from member where userid = #{userid} and enabled=0

	</select>
</mapper>